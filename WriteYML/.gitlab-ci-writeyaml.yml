image: 'appirio/dx-salesforce:latest'
stages:
  - cleanup
  - quality_scan
  - validate
  - deploy
  - merge_request
variables:
  SONAR_URL: 'https://sonar.appirio.com'
.cacheNodefiles:
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - node
  except:
    - schedules
cleanup:
  stage: cleanup
  variables:
    GIT_STRATEGY: clone
  script:
    - 'adx ci:shell --script cleanUp.sh --arguments QA master'
  only:
    - schedules
sonarqube_scan:
  stage: quality_scan
  script:
    - 'adx sonar:config'
    - >-
      sonar-scanner -Dsonar.sources=. -Dsonar.host.url=$SONAR_URL
      -Dsonar.login=$SONAR_LOGIN -Dsonar.gitlab.project_id=$CI_PROJECT_ID
      -Dsonar.gitlab.commit_sha=$CI_COMMIT_SHA
      -Dsonar.gitlab.ref_name=$CI_COMMIT_REF_NAME -Dsonar.analysis.mode=preview
  only:
    - /^feature\/.*/
  except:
    - tags
    - schedules
sonarqube_scan_publish:
  stage: quality_scan
  script:
    - 'adx sonar:config'
    - >-
      sonar-scanner -Dsonar.sources=. -Dsonar.host.url=$SONAR_URL
      -Dsonar.login=$SONAR_LOGIN -Dsonar.projectVersion=$CI_COMMIT_TAG
      -Dsonar.analysis.mode=publish
  only:
    - master
    - QA
  except:
    - tags
    - schedules
validate_against_SIT:
  stage: validate
  script:
    - . ./config.sh
    - 'adx resources:build'
    - 'adx resources:check'
    - 'adx sort:check'
    - 'adx package:deploy --timestamp $TIMESTAMP --target SIT'
  cache: &ref_0
    key: $CI_COMMIT_REF_SLUG
    paths:
      - node
  except: &ref_1
    - schedules
  only: /^feature/.*/
deploy_to_SIT:
  stage: deploy
  script:
    - . ./config.sh
    - 'adx resources:build'
    - 'adx resources:check'
    - 'adx sort:check'
    - >-
      adx package:deploy --deploy.checkOnly false --timestamp $TIMESTAMP
      --target SIT
  cache: *ref_0
  except: *ref_1
  only: /^SIT/
validate_against_UAT:
  stage: validate
  script:
    - . ./config.sh
    - 'adx resources:build'
    - 'adx resources:check'
    - 'adx sort:check'
    - 'adx package:deploy --timestamp $TIMESTAMP --target UAT'
  cache: *ref_0
  except: *ref_1
  only: /^SIT/
deploy_to_UAT:
  stage: deploy
  script:
    - . ./config.sh
    - 'adx resources:build'
    - 'adx resources:check'
    - 'adx sort:check'
    - >-
      adx package:deploy --deploy.checkOnly false --timestamp $TIMESTAMP
      --target UAT
  cache: *ref_0
  except: *ref_1
  only: master
validate_against_Production:
  stage: validate
  script:
    - . ./config.sh
    - 'adx resources:build'
    - 'adx resources:check'
    - 'adx sort:check'
    - 'adx package:deploy --timestamp $TIMESTAMP --target Production'
  cache: *ref_0
  except: *ref_1
  only: master
deploy_to_Production:
  stage: deploy
  script:
    - . ./config.sh
    - 'adx resources:build'
    - 'adx resources:check'
    - 'adx sort:check'
    - >-
      adx package:deploy --deploy.checkOnly false --timestamp $TIMESTAMP
      --target Production
  cache: *ref_0
  except: *ref_1
  only: '/^v[0-9.]+$/'
  when: manual
